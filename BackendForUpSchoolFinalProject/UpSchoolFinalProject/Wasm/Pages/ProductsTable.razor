@page "/products"
@using Application.Common.Dtos;
@using Application.Features.Products.Queries.GetAll
@using Domain.Services;
@using Microsoft.AspNetCore.SignalR.Client;
@using Wasm.Services;
@inject HttpClient HttpClient
@inject IUrlHelperService UrlHelperService

<h3>Products Table</h3>

@*@if (products == null)
{
    <p>Loading...</p>
}
else if (products.Count == 0)
{
    <p>No products found.</p>
}
else
{*@
    <table class="table">
        <thead>
            <tr>
                <th>Order Id</th>
                <th>Name</th>
                <th>Picture Path</th>
                <th>Price</th>
                <th>Sale Price</th>
                <th>Created On</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var productLog in productsLog)
            {
                <tr>
                <td>@productLog.Message</td>
                <td>@productLog.SentOn</td>
                <td>@productLog.Id</td>
                
                  
                </tr>
            }
        </tbody>
    </table>

@code {
    private List<SeleniumLogDto> logs = new List<SeleniumLogDto>();

    //ProductLogs add

    private List<SeleniumLogDto> productsLog = new List<SeleniumLogDto>();

    private HubConnection? hubConnection;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl($"{UrlHelperService.SignalRUrl}/SeleniumLogHub")
            .WithAutomaticReconnect()
            .Build();

       

        // Product

        hubConnection.On<SeleniumLogDto>("NewProductLogAdded", (seleniumLogDto) =>
        {
            productsLog.Add(seleniumLogDto);

            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();

        await base.OnInitializedAsync();

    
    
    
        //try
        //{
           
        //}
        //catch (Exception ex)
        //{
        //    // Hata mesajını görmek için konsola yazdırabiliriz.
        //    Console.WriteLine(ex.Message);
        //    return null;
        //}
    }
}
